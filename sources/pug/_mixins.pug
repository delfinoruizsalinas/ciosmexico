//- Image
	@param {string} name
mixin img( name, options )
	-
		var size = getImageSize( name );
		if( options && options.retina ) { size[0] = ~~(size[0]/2); size[1] = ~~(size[1]/2); }
	img( src= procImg( name ), alt='', width= size[0], height= size[1] )&attributes( attributes )

//- Jpg image
	@param {string} name
mixin jpg( name )
	- var size = getImageSize( name );
	img( src= `images/${name}.jpg`, alt='', width= size[0], height= size[1] )&attributes( attributes )

//- Png image
	@param {string} name
mixin png( name )
	- var size = getImageSize( name );
	img( src= `images/${name}.png`, alt='', width= size[0], height= size[1] )&attributes( attributes )

//- Loop without indexing mixin
	@param {number} iterations - number of iterations
mixin loop( iterations )
	- for ( var i = 0; i < iterations; i++ )
		block

//- Parallax Section
	@param {object} obj - parameters storage
	@param {string} obj.img - image path
	@param {string} obj.innerClass - content wrapper class
mixin parallax( obj )
	section.parallax-container( data-parallax-img= procImg( obj.img ) )&attributes( attributes )
		.parallax-content( class= obj.innerClass )
			block

//- Breadcrumbs
	@param {object} obj - parameters storage
	@param {string} obj.category - required menu category
	@param {string} obj.bgImage - section background image
	@param {array}  obj.path - other navigation path
mixin breadcrumbs( obj, path )
	-
		if ( !path ) {
			if ( breadcrumbs && breadcrumbs.length ) path = breadcrumbs;
			else path = [{ title: pageName }];
		}

	section.parallax-container( data-parallax-img= obj.img )
		.parallax-content.breadcrumbs-custom.context-dark 
			.container
				.row.justify-content-center
					.col-12.col-lg-9
						h2.breadcrumbs-custom-title= obj.title ? obj.title : path[ path.length - 1 ].title
						ul.breadcrumbs-custom-path
							li: a( href='index.html' ) Home
							- for ( var i = 0; i < path.length; i++ )
								if ( i === path.length - 1 )
									li.active= path[i].title
								else
									li: a( href= path[i].link )= path[i].title

//- Main Navigation
mixin navigation( menu, type )
	if( !type )
		ul.rd-navbar-nav&attributes( attributes )
			each item in menu
				li.rd-nav-item( class= { active: item.active } )
					a.rd-nav-link( href= item.link )= item.title
					if( item.dropdown )
						+navigation( item.dropdown, 'dropdown' )
					if( item.megamenu )
						+navigation( item.megamenu, 'megamenu' )

	else if( type === 'dropdown' )
		ul.rd-menu.rd-navbar-dropdown
			each item in menu
				li.rd-dropdown-item( class= { active: item.active } )
					a.rd-dropdown-link( href= item.link )= item.title
					if( item.dropdown )
						+navigation( item.dropdown, 'dropdown' )

	else if( type === 'megamenu' )
		ul.rd-menu.rd-navbar-megamenu
			each item in menu
				li.rd-megamenu-item
					if ( item instanceof Array )
						+navigation( item, 'column' )
					else
						+navigation( item, 'block' )

	else if( type === 'column' )
		each item in menu
			+navigation( item, 'block' )

	else if( type === 'block' )
		if (menu.title && menu.link)
			h6.rd-megamenu-title: a( href= menu.link )= menu.title
		else if (menu.title)
			h6.rd-megamenu-title= menu.title
		if (menu.list)
			+navigation( menu.list, 'list' )

	else if( type === 'list' )
		ul.rd-megamenu-list
			each item in menu
				li.rd-megamenu-list-item
					a.rd-megamenu-list-link( href= item.link )= item.title

//- Logo
mixin logo
	a.brand( href='index.html' )&attributes( attributes )
		+img( logo.default, {retina: true} ).brand-logo-dark
		+img( logo.inverse, {retina: true} ).brand-logo-light

//- Copyright
mixin rights
	p.rights&attributes( attributes )
		span &copy;&nbsp;
		span.copyright-year
		span &nbsp;
		span= logo.name
		span . All Rights Reserved.
		span &nbsp;
		a( href='privacy-policy.html' ) Privacy Policy
